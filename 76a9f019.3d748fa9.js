(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),l=(n(0),n(87)),o={id:"router.md",title:"Router",sidebar_label:"Router",slug:"/router"},c={unversionedId:"router.md",id:"router.md",isDocsHomePage:!1,title:"Router",description:"Router is a plugin that enables developers to build a single page application with multiple components that acts as different views of the app.",source:"@site/docs\\router.md",slug:"/router",permalink:"/munster-docs/docs/router",editUrl:"https://github.com/mfpjayb/munster-docs/blob/master/docs/router.md",version:"current",sidebar_label:"Router",sidebar:"someSidebar",previous:{title:"Props",permalink:"/munster-docs/docs/props"},next:{title:"Store",permalink:"/munster-docs/docs/store"}},i=[{value:"Installation",id:"installation",children:[]},{value:"Register the plugin",id:"register-the-plugin",children:[]},{value:"Router property",id:"router-property",children:[]},{value:"Creating routes",id:"creating-routes",children:[]},{value:"Dynamic route matching",id:"dynamic-route-matching",children:[]},{value:"Router outlet",id:"router-outlet",children:[]},{value:"Router link",id:"router-link",children:[]},{value:"Middleware",id:"middleware",children:[]}],b={rightToc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Router is a plugin that enables developers to build a single page application with multiple components that acts as different views of the app.\nView changes depending on the activated route. Activated routes depends on the url of the browser and the path registered in the router."),Object(l.b)("h2",{id:"installation"},"Installation"),Object(l.b)("p",null,"Router plugin can be installed using the following command:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install munster-router\n")),Object(l.b)("h2",{id:"register-the-plugin"},"Register the plugin"),Object(l.b)("p",null,"Router must be registered as a plugin first before we can use it."),Object(l.b)("p",null,"Here's an example on how to register the router:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Global } from 'munster-modules';\nimport Router from 'munster-router';\nimport SampleComponent from './SampleComponent';\n\nconst routes = [\n    { path: '/sample-route', component: SampleComponent }\n];\n\nnew Global({\n    plugins: [\n        Router.routes(routes)\n    ]\n});\n")),Object(l.b)("h2",{id:"router-property"},"Router property"),Object(l.b)("p",null,"After router is registered in the global module, a ",Object(l.b)("inlineCode",{parentName:"p"},"$router")," property is added to all the component registered in the global module."),Object(l.b)("h4",{id:"navigate"},"Navigate"),Object(l.b)("p",null,"Router contains a navigate feature the same as the ",Object(l.b)("inlineCode",{parentName:"p"},"Navigate")," plugin using ",Object(l.b)("inlineCode",{parentName:"p"},"this.$router.navigate(<url>)"),"."),Object(l.b)("h4",{id:"events"},"Events"),Object(l.b)("p",null,"Router gives us an ability to watch for a router events."),Object(l.b)("p",null,"Here are the list of available events:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Events"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onRouteChange"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when the routes is changed. Watchers are automatically un-watched when the component is destroyed.")))),Object(l.b)("p",null,"Here's an example on how to watch for an event:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    ...\n</template>\n\nexport default class Root {\n    connectedCallback() {\n        this.$router.events.onRouteChange.watch(params => this.routeChangeEvent(params));\n    }\n\n    routeChangeEvent(params) {\n        console.log(params);\n    }\n}\n")),Object(l.b)("h4",{id:"router-params"},"Router params"),Object(l.b)("p",null,"We can also get the router parameters using ",Object(l.b)("inlineCode",{parentName:"p"},"this.$router.params"),"."),Object(l.b)("h2",{id:"creating-routes"},"Creating routes"),Object(l.b)("p",null,"A route is just a javascript object that contains two required properties, ",Object(l.b)("inlineCode",{parentName:"p"},"path")," and ",Object(l.b)("inlineCode",{parentName:"p"},"component")," and some optional properties."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Properties"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"path"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The path that should match in the browser url pathname before the route is activated.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"component"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Class"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The component that will be rendered in the ",Object(l.b)("inlineCode",{parentName:"td"},"<app-router-outlet />")," when route path matches the browser url pathname.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"exact"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"If the values is true, then the Component will only activate if route path is an exact match with the browser url pathname but still respect the dynamic route matching.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"middleware"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"It is another layer of checking if the component can activate or not.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Array"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An Array of child routes.")))),Object(l.b)("p",null,"Here's an example on how to create routes"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Global } from 'munster-modules';\nimport Router from 'munster-router';\nimport SampleComponent from './SampleComponent';\nimport ChildRoute from './ChildRoute';\n\nconst routes = [\n    {\n        path: '/route', component: SampleComponent, children: [\n            { path: '/route/child', component: ChildRoute }\n        ]\n    }\n];\n")),Object(l.b)("h2",{id:"dynamic-route-matching"},"Dynamic route matching"),Object(l.b)("p",null,"Dynamic route matching is a way to match a route path segment into its matching browser url pathname segment.\nA dynamic segment is denoted by a colon ",Object(l.b)("inlineCode",{parentName:"p"},":")," followed by the segment name. ex. ",Object(l.b)("inlineCode",{parentName:"p"},"/:userId"),".\nThe value of the dynamic segments is accessible in it's component only using ",Object(l.b)("inlineCode",{parentName:"p"},"this.$router.params()"),"."),Object(l.b)("p",null,"Here's a table of dynamic routes and its corresponding values in ",Object(l.b)("inlineCode",{parentName:"p"},"this.$router.params()"),":"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"component path"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"browser url pathname"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"this.$router.params()"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/:path"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/100"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ path: 100 }")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/user/:userId"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/user/123"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ userId: 123 }")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/post/:postId/:userId"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"/post/1/123"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{ postId: 1, userId: 123 }")))),Object(l.b)("h2",{id:"router-outlet"},"Router outlet"),Object(l.b)("p",null,"Router outlet is where the activated component is located after activation. Router outlet is written as ",Object(l.b)("inlineCode",{parentName:"p"},"<plug-router-outlet />")," in the view."),Object(l.b)("p",null,"Here's an example on how to implement the router outlet:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<template>\n    <div>\n        <plug-router-outlet />\n    </div>\n</template>\n")),Object(l.b)("h2",{id:"router-link"},"Router link"),Object(l.b)("p",null,"Router link is an additional feature of the router plugin.\nIt allows the developer to add an anchor tag in the view to navigate to different routes."),Object(l.b)("p",null,"Here's an example on how to add a router link:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<template>\n    <plug-link href="/route-path">I am a link</plug-link>\n</template>\n')),Object(l.b)("p",null,"The code above will generate an element like the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<a href="/route-path">I am a link</a>\n')),Object(l.b)("h2",{id:"middleware"},"Middleware"),Object(l.b)("p",null,"Middleware is another way to check if a component can activate.\nIt can also run a block of codes before a route event happen."),Object(l.b)("p",null,"Here's an example on how to use middleware:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./AppModule.js\n...\nimport SampleMiddleware from './SampleMiddleware';\nconst routes = [\n    {\n        path: '/sample-route', component: SampleComponent,\n        middleware: [SampleMiddleware]\n    }\n];\n...\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./SampleMiddleware.js\nexport default class SampleMiddleware {\n    canActivate() {\n        ...\n    }\n}\n")),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"canActivate")," method returns true, then the component is allowed to activate and not allowed if otherwise."))}p.isMDXComponent=!0},87:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,d=u["".concat(o,".").concat(m)]||u[m]||s[m]||l;return n?r.a.createElement(d,c(c({ref:t},b),{},{components:n})):r.a.createElement(d,c({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<l;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);